crystal_doc_search_index_callback({"repository_name":"github.com/DFabric/dppm_rest_api","body":"# dppm_rest_api\n\nTODO: Write a description here\n\n## Installation\n\nTODO: Write installation instructions here\n\n## Usage\n\nTODO: Write usage instructions here\n\n## Development\n\nTODO: Write development instructions here\n\n## Contributing\n\n1. Fork it (<https://github.com/your-github-user/dppm_rest_api/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [D. Scott Boggs](https://github.com/your-github-user) - creator and maintainer\n","program":{"html_id":"github.com/DFabric/dppm_rest_api/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/DFabric/dppm_rest_api","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"app_route(method,route,action_name)-macro","html_id":"app_route(method,route,action_name)-macro","name":"app_route","doc":"This defines a route -> action association. For example,\n\n```crystal\napp_route :get, \"/:some_param/route\", :action\n```\n\nAssociates the proc returned from the AppAction.action\nmethod with the route \"/dppm/app/:some_param/route\", when\nreceived with the GET HTTP verb. The above macro expands to...\n\n```crystal\nget \"/dppm/app/:some_param/route\", &DppmRestApi::Actions::AppActions.action\n```\n... which kemal then uses to define the route.","summary":"<p>This defines a route -> action association.</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":""}],"args_string":"(method, route, action_name)","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/utils.cr#L32","def":{"name":"app_route","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n{{ method.id }}\n \"/dppm/app\n{{ route.id }}\n\", &DppmRestApi::Actions::\n{{ base_action.capitalize.id }}\nActions.\n{{ action_name.id }}\n\n\n"}},{"id":"pkg_route(method,route,action_name)-macro","html_id":"pkg_route(method,route,action_name)-macro","name":"pkg_route","doc":"This defines a route -> action association. For example,\n\n```crystal\npkg_route :get, \"/:some_param/route\", :action\n```\n\nAssociates the proc returned from the PkgAction.action\nmethod with the route \"/dppm/pkg/:some_param/route\", when\nreceived with the GET HTTP verb. The above macro expands to...\n\n```crystal\nget \"/dppm/pkg/:some_param/route\", &DppmRestApi::Actions::PkgActions.action\n```\n... which kemal then uses to define the route.","summary":"<p>This defines a route -> action association.</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":""}],"args_string":"(method, route, action_name)","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/utils.cr#L32","def":{"name":"pkg_route","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n{{ method.id }}\n \"/dppm/pkg\n{{ route.id }}\n\", &DppmRestApi::Actions::\n{{ base_action.capitalize.id }}\nActions.\n{{ action_name.id }}\n\n\n"}},{"id":"render_data(data)-macro","html_id":"render_data(data)-macro","name":"render_data","doc":"Render the given data as JSON to the local `context` variable.","summary":"<p>Render the given data as JSON to the local <code>context</code> variable.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""}],"args_string":"(data)","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/utils.cr#L27","def":{"name":"render_data","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  context.content_type = \"application/json\"\n  IO.copy data, context\n"}},{"id":"route(name,&block)-macro","html_id":"route(name,&amp;block)-macro","name":"route","doc":"This defines the action to be taken by the given name under the current scope.\nFor example, for the src_route :list, you would define route :list under\nSrcActions like so...\n```\nroute :list do |context|\n  # do a thing\nend\n```\nwhich expands to the following method:\n```\ndef list\n  ->(context : HTTP::Server::Context) do |context|\n    # do a thing\n  end\nend\n```\nSee the various _route macros for more information.","summary":"<p>This defines the action to be taken by the given name under the current scope.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name, &block)","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/utils.cr#L18","def":{"name":"route","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"  def \n{{ name.id }}\n : ->(HTTP::Server::Context)\n    ->(context : HTTP::Server::Context) do\n      \n{{ block.body }}\n\n    \nend\n  \nend\n\n"}},{"id":"service_route(method,route,action_name)-macro","html_id":"service_route(method,route,action_name)-macro","name":"service_route","doc":"This defines a route -> action association. For example,\n\n```crystal\nservice_route :get, \"/:some_param/route\", :action\n```\n\nAssociates the proc returned from the ServiceAction.action\nmethod with the route \"/dppm/service/:some_param/route\", when\nreceived with the GET HTTP verb. The above macro expands to...\n\n```crystal\nget \"/dppm/service/:some_param/route\", &DppmRestApi::Actions::ServiceActions.action\n```\n... which kemal then uses to define the route.","summary":"<p>This defines a route -> action association.</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":""}],"args_string":"(method, route, action_name)","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/utils.cr#L32","def":{"name":"service_route","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n{{ method.id }}\n \"/dppm/service\n{{ route.id }}\n\", &DppmRestApi::Actions::\n{{ base_action.capitalize.id }}\nActions.\n{{ action_name.id }}\n\n\n"}},{"id":"src_route(method,route,action_name)-macro","html_id":"src_route(method,route,action_name)-macro","name":"src_route","doc":"This defines a route -> action association. For example,\n\n```crystal\nsrc_route :get, \"/:some_param/route\", :action\n```\n\nAssociates the proc returned from the SrcAction.action\nmethod with the route \"/dppm/src/:some_param/route\", when\nreceived with the GET HTTP verb. The above macro expands to...\n\n```crystal\nget \"/dppm/src/:some_param/route\", &DppmRestApi::Actions::SrcActions.action\n```\n... which kemal then uses to define the route.","summary":"<p>This defines a route -> action association.</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":""}],"args_string":"(method, route, action_name)","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/utils.cr#L32","def":{"name":"src_route","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":""},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n{{ method.id }}\n \"/dppm/src\n{{ route.id }}\n\", &DppmRestApi::Actions::\n{{ base_action.capitalize.id }}\nActions.\n{{ action_name.id }}\n\n\n"}}],"types":[{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi","path":"DppmRestApi.html","kind":"module","full_name":"DppmRestApi","name":"DppmRestApi","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"dppm_rest_api.cr","line_number":2,"url":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api.cr"}],"repository_name":"github.com/DFabric/dppm_rest_api","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"TODO: Write documentation for `DppmRestApi`","summary":"<p><span class=\"flag orange\">TODO</span>  Write documentation for <code><a href=\"DppmRestApi.html\">DppmRestApi</a></code></p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions","path":"DppmRestApi/Actions.html","kind":"module","full_name":"DppmRestApi::Actions","name":"Actions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"dppm_rest_api/actions/app_actions.cr","line_number":2,"url":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr"},{"filename":"dppm_rest_api/actions.cr","line_number":5,"url":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions.cr"}],"repository_name":"github.com/DFabric/dppm_rest_api","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions","kind":"module","full_name":"DppmRestApi::Actions","name":"Actions"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi","kind":"module","full_name":"DppmRestApi","name":"DppmRestApi"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"set_up_routes-instance-method","html_id":"set_up_routes-instance-method","name":"set_up_routes","doc":"This method establishes all the Kemal routes, using the macros defined in\nthe \"utils.cr\" file to DRY.","summary":"<p>This method establishes all the Kemal routes, using the macros defined in the \"utils.cr\" file to DRY.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions.cr#L10","def":{"name":"set_up_routes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"options(\"/api\") do |context|\n  render_data(File.read(API_DOCUMENT))\nend\napp_route(:get, \"/:app_name/config/:key\", :get_config)\napp_route(:post, \"/:app_name/config/:key\", :set_config)\napp_route(:delete, \"/:app_name/config/:key\", :del_config)\napp_route(:get, \"/:app_name/config\", :list_config)\n{% for action in [:boot, :reload, :restart, :start, :status, :stop] %}\n    app_route :patch, \"/:app_name/service/{{ action.id }}\", :service_{{ action.id }} {% end %}\napp_route(:get, \"/:app_name/libs\", :libs)\napp_route(:get, \"/:app_name/app\", :base_package)\napp_route(:get, \"/:app_name/pkg\", :package_data)\napp_route(:get, \"/:app_name/logs\", :logs)\napp_route(:ws, \"/:app_name/logs\", :stream_logs)\napp_route(:patch, \"/:pkg_name\", :add)\napp_route(:delete, \"/:app_name\", :delete)\nget(\"/service\", &ServiceActions.list)\nservice_route(:get, \"/status\", &ServiceActions.list_status)\n{% for action in [:boot, :reload, :restart, :start, :status, :stop] %}\n    service_route :patch, \"/:service/{{ action.id }}\", :{{ action.id }} {% end %}\nget(\"/pkg\", &PkgActions.list)\ndelete(\"/pkg\", &PkgActions.clean)\npkg_route(:get, \"/:id/:version\", :query)\npkg_route(:get, \"/:id\", :query)\npkg_route(:delete, \"/:id/:version\", :delete)\npkg_route(:delete, \"/:id\", :delete)\npkg_route(:post, \"/build/:package/:version\", :build)\npkg_route(:post, \"/build/:package\", :build)\nget(\"/src\", &SrcActions.list)\nsrc_route(:get, \"/:type\", :list)\n"}}],"macros":[],"types":[{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions/AppActions","path":"DppmRestApi/Actions/AppActions.html","kind":"module","full_name":"DppmRestApi::Actions::AppActions","name":"AppActions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"dppm_rest_api/actions/app_actions.cr","line_number":2,"url":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr"}],"repository_name":"github.com/DFabric/dppm_rest_api","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions/AppActions","kind":"module","full_name":"DppmRestApi::Actions::AppActions","name":"AppActions"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions","kind":"module","full_name":"DppmRestApi::Actions","name":"Actions"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add:->HTTP::Server::Context-instance-method","html_id":"add:-&gt;HTTP::Server::Context-instance-method","name":"add","doc":"Install the given package","summary":"<p>Install the given package</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L64","def":{"name":"add","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"base_package:->HTTP::Server::Context-instance-method","html_id":"base_package:-&gt;HTTP::Server::Context-instance-method","name":"base_package","doc":"return the base application package","summary":"<p>return the base application package</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L46","def":{"name":"base_package","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"del_config:->HTTP::Server::Context-instance-method","html_id":"del_config:-&gt;HTTP::Server::Context-instance-method","name":"del_config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L10","def":{"name":"del_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"delete:->HTTP::Server::Context-instance-method","html_id":"delete:-&gt;HTTP::Server::Context-instance-method","name":"delete","doc":"Delete the given application","summary":"<p>Delete the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L68","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"get_config:->HTTP::Server::Context-instance-method","html_id":"get_config:-&gt;HTTP::Server::Context-instance-method","name":"get_config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L4","def":{"name":"get_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"libs:->HTTP::Server::Context-instance-method","html_id":"libs:-&gt;HTTP::Server::Context-instance-method","name":"libs","doc":"lists dependent library packages","summary":"<p>lists dependent library packages</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L42","def":{"name":"libs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"list_config:->HTTP::Server::Context-instance-method","html_id":"list_config:-&gt;HTTP::Server::Context-instance-method","name":"list_config","doc":"All keys, or all config options","summary":"<p>All keys, or all config options</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L14","def":{"name":"list_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"logs:->HTTP::Server::Context-instance-method","html_id":"logs:-&gt;HTTP::Server::Context-instance-method","name":"logs","doc":"if the `\"stream\"` query parameter is set, attempt to upgrade to a websocket\nand stream the results. Otherwise return a JSON-formatted output of the\ncurrent log data.","summary":"<p>if the <code>\"stream\"</code> query parameter is set, attempt to upgrade to a websocket and stream the results.</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L56","def":{"name":"logs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"package_data:->HTTP::Server::Context-instance-method","html_id":"package_data:-&gt;HTTP::Server::Context-instance-method","name":"package_data","doc":"returns information present in pkg.con as JSON","summary":"<p>returns information present in pkg.con as JSON</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L50","def":{"name":"package_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_boot:->HTTP::Server::Context-instance-method","html_id":"service_boot:-&gt;HTTP::Server::Context-instance-method","name":"service_boot","doc":"start the service associated with the given application","summary":"<p>start the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L18","def":{"name":"service_boot","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_reload:->HTTP::Server::Context-instance-method","html_id":"service_reload:-&gt;HTTP::Server::Context-instance-method","name":"service_reload","doc":"reload the service associated with the given application","summary":"<p>reload the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L22","def":{"name":"service_reload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_restart:->HTTP::Server::Context-instance-method","html_id":"service_restart:-&gt;HTTP::Server::Context-instance-method","name":"service_restart","doc":"restart the service associated with the given application","summary":"<p>restart the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L26","def":{"name":"service_restart","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_start:->HTTP::Server::Context-instance-method","html_id":"service_start:-&gt;HTTP::Server::Context-instance-method","name":"service_start","doc":"start the service associated with the given application","summary":"<p>start the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L30","def":{"name":"service_start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_status:->HTTP::Server::Context-instance-method","html_id":"service_status:-&gt;HTTP::Server::Context-instance-method","name":"service_status","doc":"get the status of the service associated with the given application","summary":"<p>get the status of the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L34","def":{"name":"service_status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_stop:->HTTP::Server::Context-instance-method","html_id":"service_stop:-&gt;HTTP::Server::Context-instance-method","name":"service_stop","doc":"stop the service associated with the given application","summary":"<p>stop the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L38","def":{"name":"service_stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"set_config:->HTTP::Server::Context-instance-method","html_id":"set_config:-&gt;HTTP::Server::Context-instance-method","name":"set_config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L7","def":{"name":"set_config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"stream_logs:->HTTP::Server::Context-instance-method","html_id":"stream_logs:-&gt;HTTP::Server::Context-instance-method","name":"stream_logs","doc":"Stream the logs for the given application over the websocket connection.","summary":"<p>Stream the logs for the given application over the websocket connection.</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/app_actions.cr#L60","def":{"name":"stream_logs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions/PkgActions","path":"DppmRestApi/Actions/PkgActions.html","kind":"module","full_name":"DppmRestApi::Actions::PkgActions","name":"PkgActions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"dppm_rest_api/actions/pkg_actions.cr","line_number":2,"url":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/pkg_actions.cr"}],"repository_name":"github.com/DFabric/dppm_rest_api","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions","kind":"module","full_name":"DppmRestApi::Actions","name":"Actions"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"build:->HTTP::Server::Context-instance-method","html_id":"build:-&gt;HTTP::Server::Context-instance-method","name":"build","doc":"Build a package, returning the ID of the built image, and perhaps a status\nmessage? We could also use server-side events or a websocket to provide the\nstatus of this action as it occurs over the API, rather than just returning\na result on completion.","summary":"<p>Build a package, returning the ID of the built image, and perhaps a status message? We could also use server-side events or a websocket to provide the status of this action as it occurs over the API, rather than just returning a result on completion.</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/pkg_actions.cr#L23","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"clean:->HTTP::Server::Context-instance-method","html_id":"clean:-&gt;HTTP::Server::Context-instance-method","name":"clean","doc":"Clean unused built packages","summary":"<p>Clean unused built packages</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/pkg_actions.cr#L8","def":{"name":"clean","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"delete:->HTTP::Server::Context-instance-method","html_id":"delete:-&gt;HTTP::Server::Context-instance-method","name":"delete","doc":"Delete a given package","summary":"<p>Delete a given package</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/pkg_actions.cr#L16","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"list:->HTTP::Server::Context-instance-method","html_id":"list:-&gt;HTTP::Server::Context-instance-method","name":"list","doc":"List built packages","summary":"<p>List built packages</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/pkg_actions.cr#L4","def":{"name":"list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"query:->HTTP::Server::Context-instance-method","html_id":"query:-&gt;HTTP::Server::Context-instance-method","name":"query","doc":"Query information about a given package","summary":"<p>Query information about a given package</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/pkg_actions.cr#L12","def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions/ServiceActions","path":"DppmRestApi/Actions/ServiceActions.html","kind":"module","full_name":"DppmRestApi::Actions::ServiceActions","name":"ServiceActions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"dppm_rest_api/actions/service_actions.cr","line_number":2,"url":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/service_actions.cr"}],"repository_name":"github.com/DFabric/dppm_rest_api","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions","kind":"module","full_name":"DppmRestApi::Actions","name":"Actions"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"list:->HTTP::Server::Context-instance-method","html_id":"list:-&gt;HTTP::Server::Context-instance-method","name":"list","doc":"List the managed services. The `system` query parameter may be specified to\nenumerate all system services rather than just the ones managed by DPPM.","summary":"<p>List the managed services.</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/service_actions.cr#L5","def":{"name":"list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"list_status:->HTTP::Server::Context-instance-method","html_id":"list_status:-&gt;HTTP::Server::Context-instance-method","name":"list_status","doc":"List each managed service along with its status output.","summary":"<p>List each managed service along with its status output.</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/service_actions.cr#L9","def":{"name":"list_status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_boot:->HTTP::Server::Context-instance-method","html_id":"service_boot:-&gt;HTTP::Server::Context-instance-method","name":"service_boot","doc":"start the service associated with the given application","summary":"<p>start the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/service_actions.cr#L14","def":{"name":"service_boot","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_reload:->HTTP::Server::Context-instance-method","html_id":"service_reload:-&gt;HTTP::Server::Context-instance-method","name":"service_reload","doc":"reload the service associated with the given application","summary":"<p>reload the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/service_actions.cr#L18","def":{"name":"service_reload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_restart:->HTTP::Server::Context-instance-method","html_id":"service_restart:-&gt;HTTP::Server::Context-instance-method","name":"service_restart","doc":"restart the service associated with the given application","summary":"<p>restart the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/service_actions.cr#L22","def":{"name":"service_restart","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_start:->HTTP::Server::Context-instance-method","html_id":"service_start:-&gt;HTTP::Server::Context-instance-method","name":"service_start","doc":"start the service associated with the given application","summary":"<p>start the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/service_actions.cr#L26","def":{"name":"service_start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_status:->HTTP::Server::Context-instance-method","html_id":"service_status:-&gt;HTTP::Server::Context-instance-method","name":"service_status","doc":"get the status of the service associated with the given application","summary":"<p>get the status of the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/service_actions.cr#L30","def":{"name":"service_status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}},{"id":"service_stop:->HTTP::Server::Context-instance-method","html_id":"service_stop:-&gt;HTTP::Server::Context-instance-method","name":"service_stop","doc":"stop the service associated with the given application","summary":"<p>stop the service associated with the given application</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/service_actions.cr#L34","def":{"name":"service_stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions/SrcActions","path":"DppmRestApi/Actions/SrcActions.html","kind":"module","full_name":"DppmRestApi::Actions::SrcActions","name":"SrcActions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"dppm_rest_api/actions/src_actions.cr","line_number":2,"url":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/src_actions.cr"}],"repository_name":"github.com/DFabric/dppm_rest_api","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/DFabric/dppm_rest_api/DppmRestApi/Actions","kind":"module","full_name":"DppmRestApi::Actions","name":"Actions"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"list:->HTTP::Server::Context-instance-method","html_id":"list:-&gt;HTTP::Server::Context-instance-method","name":"list","doc":"List all available source packages, of either the *lib* or *app* type.","summary":"<p>List all available source packages, of either the <em>lib</em> or <em>app</em> type.</p>","abstract":false,"args":[],"args_string":" :  -> HTTP::Server::Context","source_link":"https://github.com/DFabric/dppm_rest_api/blob/b21036be516633b94764b793a31da3e2aacef0ee/src/dppm_rest_api/actions/src_actions.cr#L4","def":{"name":"list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> HTTP::Server::Context)","visibility":"Public","body":"->(context : HTTP::Server::Context) do\nend"}}],"macros":[],"types":[]}]}]}]}})